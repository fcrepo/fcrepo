
jobs:
  include:
    - name: Build - Linux
      os: linux
      dist: trusty
      sudo: true
      language: java
      jdk: openjdk11
      env: DEPLOY=true
    - name: Build - Windows
      os: windows
      language: shell
    - name: ITests - PostgreSQL
      os: linux
      dist: focal
      sudo: true
      language: java
      jdk: openjdk11
      addons:
        postgresql: '12'
        apt:
          packages:
            - postgresql-12
            - postgresql-client-12
      env:
        - DB=postgresql
        - DB_PORT=5432
        - ITEST=true
      before_script:
        - psql -c 'CREATE DATABASE fcrepo;' -U postgres
    - name: ITests - MariaDB
      os: linux
      dist: trusty
      sudo: true
      language: java
      jdk: openjdk11
      addons:
        mariadb: "10.4"
      env:
        - DB=mariadb
        - DB_PORT=3306
        - ITEST=true
      before_script:
        - mysql -e 'CREATE DATABASE IF NOT EXISTS fcrepo;'
    - name: ITests - MySQL
      os: linux
      dist: xenial
      sudo: true
      language: java
      jdk: openjdk11
      env:
        - DB=mysql
        - DB_PORT=3306
        - ITEST=true
      services:
        - mysql
      before_script:
        - wget https://repo.mysql.com/mysql-apt-config_0.8.10-1_all.deb
        - sudo dpkg -i mysql-apt-config_0.8.10-1_all.deb
        - sudo apt-get update -q
        - sudo apt-get install -q -y --allow-unauthenticated -o Dpkg::Options::=--force-confnew mysql-server
        - sudo systemctl restart mysql
        - sudo mysql_upgrade
        - mysql --version
        - mysql -e 'CREATE DATABASE IF NOT EXISTS fcrepo;'

env:
  - MAVEN_VERSION=3.6.3

before_install:
 - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
    choco install openjdk11 --version 11.0.5.10;
    export JAVA_HOME='/c/Program Files/OpenJDK/openjdk-11.0.5_10'
    export PATH="${PATH}:${JAVA_HOME}/bin";
    choco install maven --version ${MAVEN_VERSION};
    export PATH="${PATH}:/c/ProgramData/chocolatey/lib/maven/apache-maven-3.6.3/bin";
  fi;
 - "echo $PATH"
 - "export JAVA_OPTS=-Xmx512m"
 - "mvn -N io.takari:maven:0.7.7:wrapper -Dmaven=${MAVEN_VERSION}"
 - if [ "$DEPLOY" = "true" ] && [ ! -z "$GPG_SECRET_KEYS" ] [ ! -z "$GPG_SECRET_KEYS" ]; then echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import; fi
 - if [ "$DEPLOY" = "true" ] && [ ! -z "$GPG_OWNERTRUST" ]; then echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust; fi
 - if [ "$DB" = "postgresql" ]; then sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf; fi
 - if [ "$DB" = "postgresql" ]; then sudo systemctl restart postgresql@12-main; fi

# Default installation command is 
# mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
# this is what we test as our build phase so skip it here.
install:
 - true

before_script:
 - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
     sudo service mysql stop;
     sudo service postgresql stop;
     sudo service acpid stop;
     sudo service atd stop;
     sudo service cron stop;
     sudo service memcached stop;
     sudo service ntp stop;
     sudo service rabbitmq-server stop;
     sudo service resolvconf stop;
     sudo service sshguard stop;
     sudo service ssh stop;
   fi
    
script:
 - if [ "$ITEST" != "true" ]; then ./mvnw --settings .travis/settings.xml -Dgpg.skip -Dfcrepo.streaming.parallel=true install -B -V; fi
 - if [ "$ITEST" = "true" ]; then ./mvnw -Dfcrepo.db.url="jdbc:${DB}://localhost:${DB_PORT}/fcrepo" -Dfcrepo.db.user="travis" -Dfcrepo.db.password="" clean install -P db-test; fi

deploy:
 -
   provider: script
   script: .travis/deploy.sh
   skip_cleanup: true
   on:
     repo: fcrepo4/fcrepo4
     branch: main 
     condition: $DEPLOY = true

notifications:
  irc: "irc.freenode.org#fcrepo"
  email:
      - fedora-tech@googlegroups.com
